global Domains 
  pair=v_t(expr,expr)
  pair_list=pair*


GLOBAL PREDICATES  


calc_on_approx(expr,expr) - determ (i,o)  % Вычисление термов по аппроксимации, не меняя ее. Выдает второй аргумет - дескриптор первого аргумента в аппроксимации
calc(expr,expr) -determ (i,o)  %(i, r(o))       % Вычисление термов с возможным измененем аппроксимации
expr_to_str(expr,string) - procedure (i,o)  % Перевод терма в текст с использование шаблонов операций и переменных
replaceStr_all(string Old, string New,string Str,string NewStr) - determ (i,i,i,o)
error_msg(STRING,INTEGER) - determ (i,i)
calc_type(expr,expr) - (i,o)                        % Вычисление типа выражения
% basic_eq.pro
 make_morphism(expr,expr,expr) - (i,i,i)
list_not_repeat(slist,slist) - (i,o)
% subobjec.pro
list_not_repeat(expr_list,expr_list) - (i,o)

% subobjec.pro
	 % is_subobject(expr,expr) - (i,i)
isa_calc_type(expr Term,expr Type) - (i,i)
replace_var_on_ex(expr_list Arglist,expr_list ListVar,expr Term,expr TermRes) - determ (i,i,i,o) % заменяет в Term переменные из ListVar на соотв. выражения из ArgList
%append(expr_list,expr_list,expr_list) - (i,i,o)
scan(string,slist) -(i,o)
listStr_listWord(slist,list_w_v_t) - (i,o)
gen_term_num(integer)-(o)
weigh(expr,integer)-(i,o)
subobjects_of(expr,expr_list) - (i,o)


expr_to_struct_str(expr,string) - (i,o) % Этот предикат нужно объявить глобальным. Его можно определить там же, где опрелен expr_to_str в фале Editor.pre
				% и написать там же, где написан expr_to_str (вместе с остальными, используемыми в нем предикатами)
				%Предикат вызывается в calc.pro из предиката calc, как реакция на шаблон "Показать структуру @Expr"

translate_struct(expr,string,integer Level) - (i,o,i)
translate_struct_list(expr_list,slist,integer) - (i,o,i)
otstup(integer,string,string) - (i,i,o)










